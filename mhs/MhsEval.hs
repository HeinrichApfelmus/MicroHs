module MhsEval (
    MhsContext,
    withMhsContext,
    createMhsContext,
    closeMhsContext,
    eval,
    run,
    MhsError(..),
    compiledWithGhc
) where

import Foreign
import Control.Exception
import Data.Typeable

-- | Opaque context type
newtype MhsContext = MhsContext (Ptr ())

-- | Custom error type for MicroHs evaluation
data MhsError = 
    MhsInitError String
  | MhsEvalError String
  deriving (Show, Typeable)

instance Exception MhsError

-- | This type represents the object code generated by the MicroHs compiler as typically written to out.comb.
type MhsCombCode = String


-- non-GHC case
compiledWithGhc :: Bool
compiledWithGhc = False

createMhsContext :: IO MhsContext
createMhsContext = throwIO $ MhsInitError "only supported with GHC"

closeMhsContext :: MhsContext -> IO ()
closeMhsContext _ = return ()

withMhsContext :: (MhsContext -> IO a) -> IO a
withMhsContext action = throwIO $ MhsInitError "only supported with GHC"

eval :: MhsContext -> MhsCombCode -> IO String
eval _ _ = throwIO $ MhsEvalError "only supported with GHC"

run :: MhsContext -> MhsCombCode -> IO ()
run _ _ = throwIO $ MhsEvalError "only supported with GHC"

